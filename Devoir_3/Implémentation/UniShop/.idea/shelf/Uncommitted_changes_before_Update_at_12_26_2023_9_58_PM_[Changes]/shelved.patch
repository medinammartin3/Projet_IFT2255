Index: src/main/java/unishop/ControleurInvite.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unishop;\r\n\r\nimport unishop.Categories.Categorie;\r\nimport unishop.Users.Acheteur;\r\nimport unishop.Users.Revendeur;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport static unishop.Main.*;\r\n\r\npublic class ControleurInvite {\r\n    static short choix;\r\n    static void menuInvite(){\r\n        while (true) {\r\n            System.out.println(\"\\nVoici le menu Invité:\");\r\n            choix = selectionChoix(new String[]{\"Trouver un acheteur\", \"Trouver un revendeur\", \"Trouver un produit\",\r\n                    \"Retourner au menu principal\"});\r\n            switch (choix) {\r\n                case 1 -> trouverAcheteur();\r\n                case 2 -> trouverRevendeur();\r\n                case 3 -> trouverProduits();\r\n                case 4 -> {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    static void trouverAcheteur() {\r\n        while (true) {\r\n            System.out.print(\"\\nEntrer le nom d'un acheteur (N'entrez rien pour la liste de tous les acheteurs): \");\r\n            Acheteur acheteur;\r\n            String aEntre = demanderString();\r\n            ArrayList<String> aSelect = new ArrayList<>();\r\n            for (String a : fichiersDansDossier(ACHETEURS_PATH)) {\r\n                if (a.contains(aEntre))\r\n                    aSelect.add(a);\r\n            }\r\n            if (aSelect.isEmpty()) {\r\n                System.out.println(\"Aucun acheteur ne correspond à cette recherche! Veuillez réessayer.\");\r\n                continue;\r\n            }\r\n            aSelect.add(\"Faire une nouvelle recherche\");\r\n            aSelect.add(\"Retourner au menu\");\r\n            System.out.println(\"Sélectionnez une option: \");\r\n            choix = selectionChoix(aSelect.toArray());\r\n            if (choix == aSelect.size() - 2)\r\n                continue;\r\n            else if (choix == aSelect.size() - 1)\r\n                return;\r\n            acheteur = initialiserAcheteur(aSelect.get(choix - 1));\r\n            while (true) {\r\n                System.out.println(\"\\nVoici les informations sur \" + acheteur.getUsername() + \": \" +\r\n                        acheteur.afficherMetriques());\r\n                System.out.println(\"\\nQue voulez-vous faire ensuite?\");\r\n                choix = selectionChoix(new String[] {\"Voir les followers\", \"Voir les suivis\",\r\n                        \"Faire une autre recherche\", \"Retourner au menu principal\"});\r\n                if (choix == 3)\r\n                    break;\r\n                else if (choix == 4)\r\n                    return;\r\n                if (choix == 1)\r\n                    aSelect = acheteur.getFollowers();\r\n                else\r\n                    aSelect = acheteur.getSuivis();\r\n                if (aSelect.isEmpty()) {\r\n                    if (choix == 1)\r\n                        System.out.println(\"\\n\" + acheteur.getUsername() + \" n'a aucun follower!\");\r\n                    else\r\n                        System.out.println(\"\\n\" + acheteur.getUsername() + \" ne suit aucun acheteur!\");\r\n                    continue;\r\n                }\r\n                System.out.println(\"\\nChoississez un acheteur: \");\r\n                choix = selectionChoix(aSelect.toArray());\r\n                acheteur = initialiserAcheteur(aSelect.get(choix));\r\n            }\r\n\r\n        }\r\n    }\r\n    static void trouverProduits() {\r\n        while (true) {\r\n            System.out.println(\"\\nQuel type de recherche voulez-vous faire?\");\r\n            ArrayList<String> pSelect = new ArrayList<>();\r\n            List<String> produits = fichiersDansDossier(PRODUITS_PATH);\r\n            boolean estRecherche = 1 == selectionChoix(new String[]{\"Recherche par mots-clés\",\r\n                    \"Recherche par filtre\"});\r\n            String recherche = \"\";\r\n            short choixCat = 0;\r\n            boolean estPrixPlusGrand = false;\r\n            float floatDemande = 0;\r\n            int nbLikesDemande = 0;\r\n            if (estRecherche) {\r\n                System.out.print(\"Entrez votre recherche: \");\r\n                recherche = demanderString();\r\n            } else {\r\n                System.out.println(\"Choisissez votre type de filtre: \");\r\n                choix = selectionChoix(new String[]{\"Catégorie\", \"Prix\", \"Popularité\", \"Note moyenne\",\r\n                        \"Promotion\"});\r\n                switch (choix) {\r\n                    case 1 -> {\r\n                        System.out.println(\"Choisissez une catégorie: \");\r\n                        choixCat = selectionChoix(Categorie.categories);\r\n                        --choixCat;\r\n                    }\r\n                    case 2 -> {\r\n                        System.out.println(\"Filtrer par plus petit ou plus grand?\");\r\n                        estPrixPlusGrand = 1 == selectionChoix(new String[]{\"Plus petit\", \"Plus grand\"});\r\n                        System.out.print(\"Entrez un prix: \");\r\n                        floatDemande = demanderFloat(\"un prix\");\r\n                    }\r\n                    case 3 -> {\r\n                        System.out.print(\"Entrez un nombre minimum de likes: \");\r\n                        nbLikesDemande = demanderIntPositif(\"un nombre de likes\");\r\n                    }\r\n                    case 4 -> {\r\n                        System.out.print(\"Entrez une note moyenne minimale: \");\r\n                        floatDemande = demanderFloat(\"une note\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (String p : produits) {\r\n                String[] contenu = lireFichierEnEntier(PRODUITS_PATH + p);\r\n                String[] infos = contenu[0].split(\",\");\r\n                String[] cat = contenu[3].split(\",\");\r\n                String produitPreview = String.join(\", \", infos[1],\r\n                        Categorie.getCat(Integer.parseInt(cat[0])), \"Revendeur: \" + infos[0]);\r\n                if (estRecherche) {\r\n                    if ((infos[1] + infos[2] + cat[1] + cat[2] + cat[3]).contains(recherche))\r\n                        pSelect.add(produitPreview);\r\n                } else {\r\n                    switch (choix) {\r\n                        case 1 -> {\r\n                            short pCat = Short.parseShort(cat[0]);\r\n                            if (choixCat == pCat)\r\n                                pSelect.add(produitPreview);\r\n                        }\r\n                        case 2 -> {\r\n                            float prix = Float.parseFloat(infos[3]);\r\n                            if (estPrixPlusGrand) {\r\n                                if (prix <= floatDemande)\r\n                                    pSelect.add(produitPreview);\r\n                            } else {\r\n                                if (prix >= floatDemande)\r\n                                    pSelect.add(produitPreview);\r\n                            }\r\n                        }\r\n                        case 3 -> {\r\n                            String[] nbLikesS = contenu[4].split(\",\");\r\n                            int nbLikes = nbLikesS.length;\r\n                            if (nbLikesS[0].isEmpty())\r\n                                nbLikes = 0;\r\n                            if (nbLikes >= nbLikesDemande)\r\n                                pSelect.add(produitPreview);\r\n                        }\r\n                        case 4 -> {\r\n                            float noteMoyenne = Float.parseFloat(infos[6]);\r\n                            if (noteMoyenne >= floatDemande)\r\n                                pSelect.add(produitPreview);\r\n                        }\r\n                        case 5 -> {\r\n                            if (Integer.parseInt(infos[5]) != 0)\r\n                                pSelect.add(produitPreview);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (pSelect.isEmpty()) {\r\n                System.out.println(\"Aucun résultat pour cette recherche. Veuillez réessayer.\");\r\n                continue;\r\n            }\r\n            pSelect.add(\"Faire une nouvelle recherche\");\r\n            pSelect.add(\"Retourner au menu principal\");\r\n            while (true) {\r\n                System.out.println(\"\\nChoisissez un produit: \");\r\n                choix = selectionChoix(pSelect.toArray());\r\n                if (choix == pSelect.size() - 1)\r\n                    break;\r\n                else if (choix == pSelect.size())\r\n                    return;\r\n                Produit p = initialiserProduit(pSelect.get(choix - 1).split(\",\")[0]);\r\n                System.out.println(\"\\n\" + p.getFormatDisplay());\r\n                while (true) {\r\n                    System.out.println(\"\\nQue voulez-vous faire ensuite?\");\r\n                    choix = selectionChoix(new String[]{\"Regarder les évaluations\", \"Voir les likes\",\r\n                            \"Retourner au résultat de la recherche\"});\r\n                    if (choix == 3)\r\n                        break;\r\n                    switch (choix) {\r\n                        case 1 -> System.out.println(\"\\n\" + p.getEvaluationsDisplay());\r\n                        case 2 -> {\r\n                            ArrayList<String> ar = p.voirLikes();\r\n                            String[] as = ar.toArray(new String[0]);\r\n                            if (as.length == 1)\r\n                                System.out.println(\"\\nCe produit n'a aucun likes.\");\r\n                            else\r\n                                System.out.println(\"\\nVoici la liste des likes:\\n\" + String.join(\"\\n\", as));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    static void trouverRevendeur() {\r\n        while (true) {\r\n            System.out.println(\"\\nQuel type de recherche voulez-vous faire?\");\r\n            ArrayList<String> revendeurSelect = new ArrayList<>();\r\n            List<String> revendeurs = fichiersDansDossier(REVENDEURS_PATH);\r\n            String demandeUtilisateur = \"\";\r\n            boolean estRecherche = 1 == selectionChoix(new String[]{\"Recherche par mots-clés\",\r\n                    \"Recherche par filtre\"});\r\n\r\n            if (estRecherche) {\r\n                System.out.print(\"Entrez votre recherche: \");\r\n                demandeUtilisateur = demanderString();\r\n            } else {\r\n                System.out.println(\"Choisissez votre type de filtre: \");\r\n                choix = selectionChoix(new String[]{\"Catégorie de produits vendues\", \"Nom\", \"Adresse\"});\r\n                switch (choix) {\r\n                    case 1 -> {\r\n                        System.out.println(\"Choisissez une catégorie: \");\r\n                        demandeUtilisateur = Categorie.getCat(selectionChoix(Categorie.categories) - 1);\r\n\r\n                    }\r\n                    case 2 -> {\r\n                        System.out.println(\"Choisissez un nom :\");\r\n                        demandeUtilisateur = demanderString();\r\n\r\n                    }\r\n                    case 3 -> {\r\n                        System.out.print(\"Choisissez une adresse \");\r\n                        demandeUtilisateur = demanderString();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (String r : revendeurs) {\r\n                String[] contenu = lireFichierEnEntier(REVENDEURS_PATH + r + \"/\" + INFOS);\r\n                String adresse = contenu[0].split(\",\")[5];\r\n                List<String> categories = Arrays.asList(contenu[2].split(\",\"));\r\n\r\n                if (estRecherche) {\r\n                    if (r.contains(demandeUtilisateur))\r\n                        revendeurSelect.add(r);\r\n                } else {\r\n                    switch (choix) {\r\n                        case 1 -> {\r\n                            if (categories.contains(demandeUtilisateur))\r\n                                revendeurSelect.add(r);\r\n                        }\r\n                        case 2 -> {\r\n                            if (r.contains(demandeUtilisateur))\r\n                                revendeurSelect.add(r);\r\n                        }\r\n                        case 3 -> {\r\n                            if (adresse.contains(demandeUtilisateur))\r\n                                revendeurSelect.add(r);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (revendeurSelect.isEmpty()) {\r\n                System.out.println(\"Aucun résultat pour cette recherche. Veuillez réessayer.\");\r\n                return;\r\n            }\r\n            revendeurSelect.add(\"Faire une nouvelle recherche\");\r\n            revendeurSelect.add(\"Retourner au menu acheteur\");\r\n            while (true) {\r\n                System.out.println(\"\\nChoisissez un revendeur: \");\r\n                choix = selectionChoix(revendeurSelect.toArray());\r\n                if (choix == revendeurSelect.size() - 1)\r\n                    break;\r\n                else if (choix == revendeurSelect.size())\r\n                    return;\r\n                Revendeur r = initialiserRevendeur(revendeurSelect.get(choix - 1));\r\n                System.out.println(\"\\n\" + r.afficherMetriques() + \"\\n\");\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/unishop/ControleurInvite.java b/src/main/java/unishop/ControleurInvite.java
--- a/src/main/java/unishop/ControleurInvite.java	(revision dd0d682b358ac9cef5f8dfb7fa480c7939791852)
+++ b/src/main/java/unishop/ControleurInvite.java	(date 1703627502522)
@@ -45,9 +45,9 @@
             aSelect.add("Retourner au menu");
             System.out.println("Sélectionnez une option: ");
             choix = selectionChoix(aSelect.toArray());
-            if (choix == aSelect.size() - 2)
+            if (choix == aSelect.size() - 1)
                 continue;
-            else if (choix == aSelect.size() - 1)
+            else if (choix == aSelect.size())
                 return;
             acheteur = initialiserAcheteur(aSelect.get(choix - 1));
             while (true) {
Index: src/main/java/unishop/Users/Acheteur.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unishop.Users;\r\n\r\nimport unishop.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Stack;\r\nimport java.util.StringJoiner;\r\n\r\npublic class Acheteur extends User implements Comparable<Acheteur>{\r\n\r\n    private String nom;\r\n    private String prenom;\r\n    private int points;\r\n    private final int likes;\r\n    final ArrayList<String> acheteursSuivis;\r\n    final ArrayList<String> suiveurs;\r\n    final ArrayList<String> revendeursLikes;\r\n    public final Commande panier;\r\n\r\n    public Acheteur(String u, String p, String em, long phone, String address, String nom,\r\n                    String prenom, int points, int likes, ArrayList<String> acheteursSuivis,\r\n                    ArrayList<String> revendeursLikes, ArrayList<Billet> b, Commande panier, ArrayList<Commande> cmds,\r\n                    Stack<Notification> ns){\r\n        super(u, p, em, phone, address, b, cmds, ns);\r\n        this.nom = nom;\r\n        this.prenom = prenom;\r\n        this.points = points;\r\n        this.likes = likes;\r\n        this.acheteursSuivis = new ArrayList<>(acheteursSuivis);\r\n        this.revendeursLikes = new ArrayList<>(revendeursLikes);\r\n        this.suiveurs = new ArrayList<>(); //Suiveurs en input\r\n        this.panier = panier;\r\n    }\r\n\r\n    public void setNom (String nom) {\r\n        this.nom = nom;\r\n        save();\r\n    }\r\n\r\n    public void setPrenom (String prenom) {\r\n        this.prenom = prenom;\r\n        save();\r\n    }\r\n\r\n    @Override\r\n    public boolean isAcheteur() {\r\n        return true;\r\n    }\r\n    public void ajouterCommande(Commande c) {\r\n        commandes.add(c);\r\n        points += c.getPointsTotal();\r\n        save();\r\n    }\r\n\r\n    @Override\r\n    public void save() {\r\n        StringJoiner sj = new StringJoiner(\"\\n\");\r\n        String[] infos = new String[] {this.password, this.email, String.valueOf(this.phone), this.address, nom,\r\n                prenom, String.valueOf(points), String.valueOf(likes)};\r\n        sj.add(String.join(\",\", infos));\r\n        sj.add(String.join(\",\", acheteursSuivis));\r\n        sj.add(String.join(\",\", revendeursLikes));\r\n        sj.add(formatSaveCommande());\r\n        sj.add(formatSaveBillet());\r\n        sj.add(formatSaveNotifications());\r\n        Main.ecrireFichierEntier(Main.ACHETEURS_PATH + this.username + \"/Infos.csv\", sj.toString());\r\n    }\r\n\r\n    // TEST\r\n     public short suivre(String acheteur) {\r\n        if (this.username.equals(acheteur))\r\n            return 2;\r\n        else if (acheteursSuivis.contains(acheteur))\r\n            return 1;\r\n        else {\r\n            acheteursSuivis.add(acheteur);\r\n            save();\r\n            return 0;\r\n        }\r\n    }\r\n    public boolean aAcheteProduit(String nomProduit) {\r\n        for(Commande c : commandes) {\r\n            for(String pt : c.getProduits()) {\r\n                if (nomProduit.equals(pt))\r\n                    return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    public ArrayList<String> getFollowers() {\r\n        return new ArrayList<>(suiveurs);\r\n    }\r\n    public ArrayList<String> getSuivis() {\r\n        return new ArrayList<>(acheteursSuivis);\r\n    }\r\n    public void ajouterPoints(int pts) {\r\n        this.points += pts;\r\n        save();\r\n    }\r\n    public int viderPoints() {\r\n        int pts = this.points;\r\n        this.points = 0;\r\n        return pts;\r\n    }\r\n    public boolean billetExiste(int id) {\r\n        for (Billet b : this.billets){\r\n            if (b.id == id)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    // TEST\r\n    @Override\r\n    public String afficherMetriques() {\r\n        return \"\\nNombre de points: \" + points + \"\\nNombre de produits commandés\" +\r\n                \"\\nNombre total de commandes effectuées: \" + commandes.size() +\r\n                \"\\nNombre de followers: \" + suiveurs.size();\r\n    }\r\n    @Override\r\n    public int compareTo(Acheteur a){\r\n        if (this.points > a.points)\r\n            return 1;\r\n        else if (this.points < a.points)\r\n            return -1;\r\n        return 0;\r\n    }\r\n\r\n    public int getPoints() {return points;}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/unishop/Users/Acheteur.java b/src/main/java/unishop/Users/Acheteur.java
--- a/src/main/java/unishop/Users/Acheteur.java	(revision dd0d682b358ac9cef5f8dfb7fa480c7939791852)
+++ b/src/main/java/unishop/Users/Acheteur.java	(date 1703627157666)
@@ -112,7 +112,7 @@
     // TEST
     @Override
     public String afficherMetriques() {
-        return "\nNombre de points: " + points + "\nNombre de produits commandés" +
+        return "\nNombre de points: " + points + "\nNombre de produits commandés: " + nbProduitsCommandes() +
                 "\nNombre total de commandes effectuées: " + commandes.size() +
                 "\nNombre de followers: " + suiveurs.size();
     }
@@ -126,4 +126,13 @@
     }
 
     public int getPoints() {return points;}
+
+    int nbProduitsCommandes() {
+        int i = 0;
+        for(Commande c : commandes) {
+            for (Produit p : c.getProduitsP())
+                ++i;
+        }
+        return i;
+    }
 }
Index: src/main/java/unishop/ControleurAcheteur.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package unishop;\r\n\r\nimport unishop.Categories.Categorie;\r\nimport unishop.Users.Acheteur;\r\nimport unishop.Users.Revendeur;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\nimport static unishop.Main.*;\r\n\r\npublic class ControleurAcheteur {\r\n    private static short choix;\r\n    private static Acheteur acheteur;\r\n    static void menuAcheteur(Acheteur a)  {\r\n        acheteur = a;\r\n        while (true) {\r\n            System.out.println(\"\\nVoici le menu Acheteur:\");\r\n            choix = selectionChoix(new String[]{\"Accéder aux commandes\", \"Accéder au panier d'achat\", \"Voir les billets\",\r\n                    \"Changer les informations du profil\", \"Rechercher un produit\",\r\n                    \"Rechercher un revendeur\", \"Gérer les acheteur suivis\",\r\n                    \"Afficher les métriques\", \"Voir les notifications\", \"Se déconnecter\"});\r\n            switch (choix) {\r\n                case 1 -> gererCommandes();\r\n                case 2 -> allerAuPanier();\r\n                case 3 -> gererBillets();\r\n                case 4 -> changerInformations();\r\n                case 5 -> {\r\n                    short c = rechercherProduits();\r\n                    while (c == 1)\r\n                        c = rechercherProduits();\r\n                    if (c == 2)\r\n                        allerAuPanier();\r\n                }\r\n                case 6 -> rechercherRevendeur();\r\n                case 7 -> gererAcheteursSuivis();\r\n                case 8 -> System.out.println(acheteur.afficherMetriques());\r\n                case 9 -> System.out.println(\"\\n\" + acheteur.voirNotifications());\r\n                case 10 -> {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    static short rechercherProduits() {\r\n        System.out.println(\"\\nQuel type de recherche voulez-vous faire?\");\r\n        ArrayList<String> pSelect = new ArrayList<>();\r\n        List<String> produits = fichiersDansDossier(PRODUITS_PATH);\r\n        boolean estRecherche = 1 == selectionChoix(new String[] {\"Recherche par mots-clés\",\r\n                \"Recherche par filtre\"});\r\n        String recherche = \"\";\r\n        short choixCat = 0;\r\n        boolean estPrixPlusGrand = false;\r\n        float floatDemande = 0;\r\n        int nbLikesDemande = 0;\r\n        if (estRecherche) {\r\n            System.out.print(\"Entrez votre recherche: \");\r\n            recherche = demanderString();\r\n        }\r\n        else {\r\n            System.out.println(\"Choisissez votre type de filtre: \");\r\n            choix = selectionChoix(new String[] {\"Catégorie\", \"Prix\", \"Popularité\", \"Note moyenne\",\r\n                    \"Promotion\"});\r\n            switch (choix) {\r\n                case 1 -> {\r\n                    System.out.println(\"Choisissez une catégorie: \");\r\n                    choixCat = selectionChoix(Categorie.categories);\r\n                    --choixCat;\r\n                }\r\n                case 2 -> {\r\n                    System.out.println(\"Filtrer par plus petit ou plus grand?\");\r\n                    estPrixPlusGrand = 1 == selectionChoix(new String[]{\"Plus petit\", \"Plus grand\"});\r\n                    System.out.print(\"Entrez un prix: \");\r\n                    floatDemande = demanderFloat(\"un prix\");\r\n                }\r\n                case 3 -> {\r\n                    System.out.print(\"Entrez un nombre minimum de likes: \");\r\n                    nbLikesDemande = demanderIntPositif(\"un nombre de likes\");\r\n                }\r\n                case 4 -> {\r\n                    System.out.print(\"Entrez une note moyenne minimale: \");\r\n                    floatDemande = demanderFloat(\"une note\");\r\n                }\r\n            }\r\n        }\r\n\r\n        for(String p : produits) {\r\n            String[] contenu = lireFichierEnEntier(PRODUITS_PATH + p);\r\n            String[] infos = contenu[0].split(\",\");\r\n            String[] cat = contenu[3].split(\",\");\r\n            String produitPreview = String.join(\", \", infos[1],\r\n                    Categorie.getCat(Integer.parseInt(cat[0])), \"Revendeur: \" + infos[0]);\r\n            if (estRecherche) {\r\n                if ((infos[1] + infos[2] + cat[1] + cat[2] + cat[3]).contains(recherche))\r\n                    pSelect.add(produitPreview);\r\n            }\r\n            else {\r\n                switch (choix) {\r\n                    case 1 -> {\r\n                        short pCat = Short.parseShort(cat[0]);\r\n                        if (choixCat == pCat)\r\n                            pSelect.add(produitPreview);\r\n                    }\r\n                    case 2 -> {\r\n                        float prix = Float.parseFloat(infos[3]);\r\n                        if (estPrixPlusGrand) {\r\n                            if (prix <= floatDemande)\r\n                                pSelect.add(produitPreview);\r\n                        } else {\r\n                            if (prix >= floatDemande)\r\n                                pSelect.add(produitPreview);\r\n                        }\r\n                    }\r\n                    case 3 -> {\r\n                        String[] nbLikesS = contenu[4].split(\",\");\r\n                        int nbLikes = nbLikesS.length;\r\n                        if (nbLikesS[0].isEmpty())\r\n                            nbLikes = 0;\r\n                        if (nbLikes >= nbLikesDemande)\r\n                            pSelect.add(produitPreview);\r\n                    }\r\n                    case 4 -> {\r\n                        float noteMoyenne = Float.parseFloat(infos[6]);\r\n                        if (noteMoyenne >= floatDemande)\r\n                            pSelect.add(produitPreview);\r\n                    }\r\n                    case 5 -> {\r\n                        if (Integer.parseInt(infos[5]) != 0)\r\n                            pSelect.add(produitPreview);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (pSelect.isEmpty()) {\r\n            System.out.println(\"Aucun résultat pour cette recherche. Veuillez réessayer.\");\r\n            return 1;\r\n        }\r\n        pSelect.add(\"Faire une nouvelle recherche\");\r\n        pSelect.add(\"Retourner au menu acheteur\");\r\n        while (true) {\r\n            System.out.println(\"\\nChoisissez un produit: \");\r\n            choix = selectionChoix(pSelect.toArray());\r\n            if (choix == pSelect.size() - 1)\r\n                return 1;\r\n            else if (choix == pSelect.size())\r\n                return 0;\r\n            Produit p = initialiserProduit(pSelect.get(choix - 1).split(\",\")[0]);\r\n            System.out.println(\"\\n\" + p.getFormatDisplay());\r\n            while (true) {\r\n                System.out.println(\"\\nQue voulez-vous faire ensuite?\");\r\n                choix = selectionChoix(new String[] {\"Liker le produit\", \"Ajouter le produit au panier\",\r\n                        \"Regarder les évaluations\", \"Écrire une évaluation\", \"Voir les likes\",\r\n                        \"Retourner au résultat de la recherche\" });\r\n                if (choix == 6)\r\n                    break;\r\n                switch (choix) {\r\n                    case 1 -> {\r\n                        if (p.liker(acheteur.getUsername()))\r\n                            System.out.println(\"\\nVous avez liké le produit \" + p.titre + \"!\");\r\n                        else\r\n                            System.out.println(\"\\nVous avez déjà liké ce produit!\");\r\n                    }\r\n                    case 2 -> {\r\n                        if (p.getQuantite() == 0) {\r\n                            System.out.println(\"\\nLe produit \" + p.titre + \" doit être restocké.\");\r\n                            continue;\r\n                        }\r\n                        acheteur.panier.addProduit(p);\r\n                        System.out.println(\"\\nVous avez ajouté \" + p.titre + \" au panier!\");\r\n                        System.out.println(\"\\nVoulez-vous aller au panier?\");\r\n                        if (choixOuiNon())\r\n                            return 2;\r\n                    }\r\n                    case 3 -> {\r\n                        if (p.getEvaluations().isEmpty()) {\r\n                            System.out.println(\"\\nCe produit n'a aucune évaluations!\");\r\n                            break;\r\n                        }\r\n                        System.out.println(\"\\nChoississez une évaluation:\");\r\n                        ArrayList<Evaluation> es = p.getEvaluations();\r\n                        ArrayList<String> ess = new ArrayList<>();\r\n                        for (Evaluation e : es)\r\n                            ess.add(e.getDisplayFormat() + \"\\n\");\r\n                        ess.add(\"Retourner au produit\");\r\n                        choix = selectionChoix(ess.toArray());\r\n                        if (choix == ess.size())\r\n                            continue;\r\n                        Evaluation e = es.get(choix - 1);\r\n                        System.out.println(\"\\n\" + e.getDisplayFormat());\r\n                        if (e.nomAcheteur.equals(acheteur.getUsername())) {\r\n                            System.out.println(\"\\nC'est votre propre évaluation!\");\r\n                            continue;\r\n                        }\r\n                        System.out.println(\"\\nQue voulez-vous faire?\");\r\n                        choix = selectionChoix(new String[] {\"Liker l'évaluation\",\r\n                                \"Signaler l'évaluation comme inappropriée\", \"Retourner au produit\"});\r\n                        if (choix == 3)\r\n                            continue;\r\n                        Acheteur a = initialiserAcheteur(e.nomAcheteur);\r\n                        if (choix == 1) {\r\n                            if (e.getLikes() == 0)\r\n                                a.ajouterPoints(10);\r\n                            if (e.ajouterLike(acheteur.getUsername())) {\r\n                                p.save();\r\n                                System.out.println(\"\\nVous avez liké l'évaluation de \" + a.getUsername() + \"!\");\r\n                            }\r\n                            else\r\n                                System.out.println(\"\\nVous avez déjà liké cette évaluation!\");\r\n                        }\r\n                        else {\r\n                            if (e.signaler()) {\r\n                                if (e.getLikes() == 0)\r\n                                    a.ajouterPoints(-10);\r\n                                e.signaler();\r\n                                p.save();\r\n                                System.out.println(\"\\nVous avez signalé cette évaluation!\");\r\n                            }\r\n                            else\r\n                                System.out.println(\"\\nCette évaluation était déjà signalée!\");\r\n                        }\r\n\r\n                    }\r\n                    case 4 -> {\r\n                        if (acheteur.aAcheteProduit(p.titre)) {\r\n                            ecrireEvaluation(p);\r\n                        }\r\n                        else {\r\n                            System.out.println(\"\\nVous devez acheter ce produit avant de l'évaluer!\");\r\n                        }\r\n                    }\r\n                    case 5 -> {\r\n                        ArrayList<String> ar = p.voirLikes();\r\n                        ar.add(\"Retourner au produit\");\r\n                        String[] as = ar.toArray(new String[0]);\r\n                        if (as.length == 1) {\r\n                            System.out.println(\"\\nCe produit n'a aucun likes.\");\r\n                        }\r\n                        else {\r\n                            System.out.println(\"\\nChoisir un acheteur à suivre: \");\r\n                            short c = selectionChoix(as);\r\n                            if (c == as.length)\r\n                                continue;\r\n                            suivreAcheteur(p.getLike(c - 1));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    static void gererCommandes() {\r\n        ArrayList<Commande> cmds = acheteur.getCommandes();\r\n        if (cmds.isEmpty()) {\r\n            System.out.println(\"\\nVous n'avez aucunes commandes!\");\r\n            return;\r\n        }\r\n        System.out.println(\"\\nChoisissez une commande: \");\r\n        String[] cs = new String[cmds.size() + 1];\r\n        for (int i = 0; i < cmds.size(); ++i) {\r\n            cs[i] = cmds.get(i).getMenuDisplay();\r\n        }\r\n        cs[cmds.size()] = \"Retourner au menu\";\r\n        choix = selectionChoix(cs);\r\n        if (choix == cs.length)\r\n            return;\r\n        Commande cmd = cmds.get(choix - 1);\r\n        System.out.println(\"\\nCommande #\" + cmd.getId());\r\n        System.out.println(cmd.afficher());\r\n        System.out.println(\"Votre commande est \" + cmd.getEtat() + \".\");\r\n        while (true) {\r\n            System.out.println(\"\\nChoisissez une action: \");\r\n            choix = selectionChoix(new String[]{\"Confirmer la livraison\", \"Retourner un produit\", \"Évaluer un produit\",\r\n                    \"Annuler la commande\", \"Regarder la date d'arrivée estimée\", \"Retourner au menu\"});\r\n            switch (choix) {\r\n                case 1 -> {\r\n                    switch (cmd.confirmerLivraison()) {\r\n                        case 0 -> System.out.println(\"\\nL'état de votre commande a été changé avec succès!\");\r\n                        case 1 -> System.out.println(\"\\nVotre commande est toujours en production.\");\r\n                        case 2 -> System.out.println(\"\\nVous avez déjà confirmé la livraison de cette commande!\");\r\n                    }\r\n                }\r\n                case 2 -> {\r\n                    if (!cmd.estLivre()) {\r\n                        System.out.println(\"\\nVotre commande n'a pas encore été livrée!\");\r\n                        continue;\r\n                    }\r\n                    if (obtenirTempsEnSecondes() - cmd.getTempsReception() > 2592000) {\r\n                        System.out.println(\"\\nVous avez passé le délai de 30 jours pour retourner une commande!\");\r\n                        continue;\r\n                    }\r\n\r\n                    Produit p = cmd.getChoixProduit(true);\r\n                    if (p == null)\r\n                        continue;\r\n                    else if (acheteur.billetExiste(p.getId())) {\r\n                        System.out.println(\"\\nVous avez déjà fait un billet pour ce produit!\");\r\n                        continue;\r\n                    }\r\n                    System.out.print(\"Quel est le problème avec ce produit? \");\r\n                    String a = demanderString();\r\n                    Revendeur r = initialiserRevendeur(p.nomReven);\r\n                    Billet b;\r\n                    System.out.println(\"Voulez-vous effectuer un retour ou un échange?\");\r\n                    if (1 == selectionChoix(new String[] {\"Retour\", \"Échange\"})) {\r\n                        b = new Billet(p.getId(), acheteur.getUsername(), p.titre, a, true, false,\r\n                                \"\", \"\", false);\r\n                    }\r\n                    else {\r\n                        System.out.println(\"Choisissez un produit parmi ceux offert par le revendeur: \");\r\n                        String produitRempla = r.getProduitAvecChoix().titre;\r\n                        b = new Billet(p.getId(), acheteur.getUsername(), p.titre, a, false, false,\r\n                                produitRempla, \"\", false);\r\n                        Produit pro = initialiserProduit(produitRempla);\r\n                        float differencePrix = arrondirPrix(pro.prix - p.prix);\r\n                        System.out.println(\"La différence de prix est de \" + differencePrix + \"$.\");\r\n                        Commande echange = new Commande((short)0, differencePrix, 0);\r\n                        echange.addProduit(pro);\r\n                        echange.passerCommande(acheteur.getUsername(), acheteur.getAddress());\r\n                        acheteur.ajouterCommande(echange);\r\n                        r.ajouterCommande(echange);\r\n                        System.out.println(\"\\nL'ID de votre commande pour l'échange est \" + echange.getId());\r\n                    }\r\n                    b.save();\r\n                    acheteur.addBillet(b);\r\n                    r.addBillet(b);\r\n                    //TODO NOTIF\r\n                    Notification notifRev = new Notification(8, acheteur.getUsername(), p.nomReven,\r\n                            p.titre, -1);\r\n                    Revendeur rev = initialiserRevendeur(p.nomReven);\r\n                    rev.addNotifications(notifRev);\r\n                    System.out.println(\"\\nVotre demande \" + (b.estRetour ? \"de retour\" : \"d'échange\") + \" a été \" +\r\n                            \"traitée avec succès!\\nVotre ID pour ce billet est: \" + p.getId());\r\n                }\r\n                case 3 -> {\r\n                    if (!cmd.estLivre()) {\r\n                        System.out.println(\"\\nVotre commande n'a pas encore été livrée!\");\r\n                        continue;\r\n                    }\r\n                    Produit p = cmd.getChoixProduit(true);\r\n                    if (p == null)\r\n                        continue;\r\n                    ecrireEvaluation(p);\r\n                }\r\n                case 4 -> {\r\n                    if (cmd.estEnProduction()) {\r\n                        System.out.println(\"\\nVoulez-vous vraiment annuler votre commande?\");\r\n                        if (choixOuiNon()) {\r\n                            effacerFichier(COMMANDES_PATH + cmd.getId() + CSV);\r\n                            acheteur.annulerCommande(cmd);\r\n                            for (String re : cmd.getRevendeurs()) {\r\n                                Revendeur r = initialiserRevendeur(re);\r\n                                r.annulerCommande(r.trouverCommande(cmd.getId()));\r\n                            }\r\n                            System.out.println(\"\\nVous avez annulé votre commande #\" + cmd.getId() + \"!\");\r\n                            return;\r\n                        }\r\n                    }\r\n                    else\r\n                        System.out.println(\"\\nVous ne pouvez plus annuler votre commande!\");\r\n\r\n                }\r\n                case 5 -> {\r\n                    if (cmd.estLivre())\r\n                        System.out.println(\"\\nVotre commande est déjà livrée!\");\r\n                    else\r\n                        System.out.println(\"\\nVotre commande devrait arriver aujourd'hui le \" + new java.util.Date());\r\n                }\r\n                case 6 -> {return;}\r\n            }\r\n        }\r\n    }\r\n    static void allerAuPanier() {\r\n        if (acheteur.panier.estVide()) {\r\n            System.out.println(\"\\nVotre panier est vide!\");\r\n            return;\r\n        }\r\n\r\n        System.out.println(\"\\nVoici votre panier:\");\r\n        System.out.println(acheteur.panier.afficher());\r\n        System.out.println(\"\\nChoisissez une action: \");\r\n        choix = selectionChoix(new String[] {\"Enlever un produit\", \"Passer la commande\", \"Retourner au menu\"});\r\n        switch (choix) {\r\n            case 1 -> {\r\n                Produit p = acheteur.panier.getChoixProduit(false);\r\n                acheteur.panier.removeProduit(p);\r\n                System.out.println(\"\\nVous avez enlevé \" + p.titre + \" du panier.\");\r\n                allerAuPanier();\r\n            }\r\n            case 2 -> {\r\n                System.out.println(\"Voulez-vous utiliser la même adresse que votre compte?\");\r\n                String adresse = acheteur.getAddress();\r\n                if (!choixOuiNon()) {\r\n                    System.out.print(\"Entrez une nouvelle adresse: \");\r\n                    adresse = demanderString();\r\n                }\r\n                System.out.println(\"Voulez-vous payer avec vos points?\");\r\n                if (choixOuiNon()) {\r\n                    float pointsEnDollars = arrondirPrix(acheteur.viderPoints() / 100f);\r\n                    float nouveauTotal = arrondirPrix(acheteur.panier.getCoutTotal() - pointsEnDollars);\r\n                    System.out.println(\"Vous avez l'équivalent de \" + pointsEnDollars + \"$ en points, ce qui \" +\r\n                            \"amène votre total à \" + nouveauTotal + \"$.\");\r\n                }\r\n                System.out.print(\"Entrez votre numéro de carte de crédit: \");\r\n                demanderLong(\"un numéro de carte de crédit\");\r\n                System.out.print(\"Entrez la date d'expiration de votre carte en format MMAA: \");\r\n                demanderIntPositif(\"une date d'expiration\");\r\n                System.out.print(\"Entrez le CVV: \");\r\n                demanderIntPositif(\"un CVV\");\r\n                Commande c = acheteur.panier.passerCommande(acheteur.getUsername(), adresse);\r\n                acheteur.ajouterCommande(c.copy());\r\n\r\n                ArrayList<String> revens = new ArrayList<>();\r\n                //TODO NOTIF\r\n                for (Produit p : c.getProduitsP()) {\r\n                    Revendeur r = initialiserRevendeur(p.nomReven);\r\n                    r.ajouterVente(p.prix);\r\n                    Notification notifRev = new Notification(6, acheteur.getUsername(), p.nomReven,\r\n                            p.titre, c.getId());\r\n                    r.addNotifications(notifRev);\r\n                    if (!revens.contains(p.nomReven)) {\r\n                        r.ajouterCommande(c);\r\n                        revens.add(r.getUsername());\r\n                    }\r\n                }\r\n                acheteur.panier.vider();\r\n                System.out.println(\"\\nVotre commande a été passée avec succès!\");\r\n                System.out.println(\"Votre identifiant de commanque unique est: \" + c.getId());\r\n            }\r\n        }\r\n    }\r\n    static void gererBillets() {\r\n        ArrayList<Billet> ba = acheteur.getBillets();\r\n        if (ba.isEmpty()) {\r\n            System.out.println(\"\\nVous n'avez aucun billet!\");\r\n            return;\r\n        }\r\n        while (true) {\r\n            System.out.println(\"\\nChoississez un billet: \");\r\n            String[] bs = new String[ba.size() + 1];\r\n            for(int i = 0; i < ba.size(); ++i) {\r\n                bs[i] = ba.get(i).afficherMenu();\r\n            }\r\n            bs[bs.length - 1] = \"Retour au menu\";\r\n            choix = selectionChoix(bs);\r\n            if (choix == bs.length)\r\n                return;\r\n            Billet b = ba.get(choix - 1);\r\n            System.out.println(\"\\n\" + b.afficher());\r\n            if (!b.estRetour && !b.isRemplaLivre()) {\r\n                System.out.println(\"\\nQue voulez-vous faire ensuite?\");\r\n                choix = selectionChoix(new String[] {\"Confirmer l'arrivée du produit de remplacement\",\r\n                        \"Retourner aux billets\", \"Retourner au menu\"});\r\n                if (choix == 1) {\r\n                    if (b.comfirmerLivraisonRempla())\r\n                        System.out.println(\"\\nVous avez confirmé la livraison du produit de remplacement!\");\r\n                    else\r\n                        System.out.println(\"\\nVous avez déjà confirmé la réception du produit de remplacement!\");\r\n                }\r\n                else if (choix == 3)\r\n                    return;\r\n            }\r\n        }\r\n\r\n    }\r\n    static void ecrireEvaluation (Produit p) {\r\n        System.out.println(\"\\nÉvaluation du produit \" + p.titre + \":\");\r\n        System.out.print(\"Veuillez entrer une note entière entre 1 et 5: \");\r\n        int note;\r\n        note = demanderIntPositif(\"une note\");\r\n        while (note > 5 || note == 0) {\r\n            System.out.print(\"Veuillez entrer une note plus petite ou égale à 5: \");\r\n            note = demanderIntPositif(\"une note\");\r\n        }\r\n        System.out.print(\"Entrez un commentaire sur le produit: \");\r\n        String comment = demanderString();\r\n        Evaluation e = new Evaluation(acheteur.getUsername(), note, comment, false, new ArrayList<>());\r\n        p.addEvaluation(e);\r\n        System.out.println(\"\\nVotre évaluation a été écrite avec succès!\");\r\n\r\n        Revendeur r = initialiserRevendeur(p.nomReven);\r\n        r.addNotifications(new Notification(7, acheteur.getUsername(), p.nomReven, p.titre, -1));\r\n    }\r\n    static void changerInformations() {\r\n        System.out.println(\"\\nChoississez ce que vous voulez modifier: \");\r\n        choix = selectionChoix(new String[]{\"Mot de passe\", \"Adresse courriel\", \"Téléphone\", \"Adresse\",\r\n                \"Prénom\", \"Nom\", \"Retourner au menu\"});\r\n        switch (choix) {\r\n            case 1 -> {\r\n                System.out.print(\"Entrez un nouveau mot de passe: \");\r\n                String password = demanderString();\r\n                acheteur.setPassword(password);\r\n                System.out.println(\"\\nVous avez changé votre mot de passe!\");\r\n            }\r\n            case 2 -> {\r\n                System.out.print(\"Entrez une nouvelle adresse de courriel: \");\r\n                String email = demanderCourrielUnique();\r\n                acheteur.setEmail(email);\r\n                System.out.println(\"\\nVous avez changé votre adresse courriel!\");\r\n            }\r\n            case 3 -> {\r\n                System.out.println(\"Entrez un nouveau numéro de téléphone: \");\r\n                long telephone = demanderLong(\"un numéro\");\r\n                acheteur.setPhone(telephone);\r\n                System.out.println(\"\\nVous avez changé votre numéro de téléphone!\");\r\n            }\r\n            case 4 -> {\r\n                System.out.print(\"Entrez une nouvelle adresse: \");\r\n                String adresse = demanderString();\r\n                acheteur.setAddress(adresse);\r\n                System.out.println(\"\\nVous avez changé votre adresse!\");\r\n            }\r\n            case 5 -> {\r\n                System.out.print(\"Entrez un nouveau prénom: \");\r\n                String prenom = demanderString();\r\n                acheteur.setPrenom(prenom);\r\n                System.out.println(\"\\nVous avez changé votre prénom!\");\r\n            }\r\n            case 6 -> {\r\n                System.out.print(\"Entrez un nouveau nom: \");\r\n                String nom = demanderString();\r\n                acheteur.setNom(nom);\r\n                System.out.println(\"\\nVous avez changé votre nom!\");\r\n            }\r\n        }\r\n    }\r\n    static void gererAcheteursSuivis() {\r\n        System.out.println(\"\\nQue voulez-vous faire ?\");\r\n        choix = selectionChoix(new String[]{\"Chercher un acheteur à suivre\",\r\n                \"Voir le classement des acheteurs que vous suivez\", \"Retourner au menu principal\"});\r\n        switch (choix) {\r\n            case 1 -> {\r\n                while (true) {\r\n                    ArrayList<String> acheteurSelect = new ArrayList<>();\r\n                    List<String> acheteurs = fichiersDansDossier(ACHETEURS_PATH);\r\n                    System.out.print(\"\\nEntrez votre recherche: \");\r\n                    String demandeUtilisateur = demanderString();\r\n                    for (String a : acheteurs) {\r\n                        if (a.contains(demandeUtilisateur))\r\n                            acheteurSelect.add(a);\r\n                    }\r\n\r\n                    if (acheteurSelect.isEmpty()) {\r\n                        System.out.println(\"\\nAucun résultat pour cette recherche. Veuillez réessayer.\");\r\n                        continue;\r\n                    }\r\n                    acheteurSelect.add(\"Faire une nouvelle recherche\");\r\n                    acheteurSelect.add(\"Retourner au menu acheteur\");\r\n                    while (true) {\r\n                        System.out.println(\"\\nChoisissez un acheteur: \");\r\n                        choix = selectionChoix(acheteurSelect.toArray());\r\n                        if (choix == acheteurSelect.size() - 1)\r\n                            break;\r\n                        else if (choix == acheteurSelect.size())\r\n                            return;\r\n                        Acheteur a = initialiserAcheteur(acheteurSelect.get(choix - 1));\r\n                        System.out.println(a.afficherMetriques());\r\n                        System.out.println(\"\\nQue voulez-vous faire ensuite?\");\r\n                        choix = selectionChoix(new String[]{\"Suivre l'acheteur\", \"Retourner au résultat de la recherche\"});\r\n                        if (choix == 1)\r\n                            suivreAcheteur(a.getUsername());\r\n                    }\r\n                }\r\n            }\r\n            case 2 -> {\r\n                ArrayList<Acheteur> acheteurs = new ArrayList<>();\r\n                acheteurs.add(acheteur);\r\n                for (String a : acheteur.getSuivis())\r\n                    acheteurs.add(initialiserAcheteur(a));\r\n                acheteurs.sort(Collections.reverseOrder());\r\n                int i = 1;\r\n                System.out.println();\r\n                for (Acheteur a : acheteurs) {\r\n                    System.out.println(i + \". \" + a.getUsername() + \" avec \" + a.getPoints() + \" points\");\r\n                    ++i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    static void rechercherRevendeur() {\r\n        while (true) {\r\n            System.out.println(\"\\nQuel type de recherche voulez-vous faire?\");\r\n            ArrayList<String> revendeurSelect = new ArrayList<>();\r\n            List<String> revendeurs = fichiersDansDossier(REVENDEURS_PATH);\r\n            String demandeUtilisateur = \"\";\r\n            boolean estRecherche = 1 == selectionChoix(new String[]{\"Recherche par mots-clés\",\r\n                    \"Recherche par filtre\"});\r\n            if (estRecherche) {\r\n                System.out.print(\"Entrez votre recherche: \");\r\n                demandeUtilisateur = demanderString();\r\n            } else {\r\n                System.out.println(\"Choisissez votre type de filtre: \");\r\n                choix = selectionChoix(new String[]{\"Catégorie de produits vendues\", \"Nom\", \"Adresse\"});\r\n                switch (choix) {\r\n                    case 1 -> {\r\n                        System.out.println(\"Choisissez une catégorie: \");\r\n                        demandeUtilisateur = Categorie.getCat(selectionChoix(Categorie.categories) - 1);\r\n\r\n                    }\r\n                    case 2 -> {\r\n                        System.out.print(\"Entrez un nom: \");\r\n                        demandeUtilisateur = demanderString();\r\n\r\n                    }\r\n                    case 3 -> {\r\n                        System.out.print(\"Entrez une adresse: \");\r\n                        demandeUtilisateur = demanderString();\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (String r : revendeurs) {\r\n                String[] contenu = lireFichierEnEntier(REVENDEURS_PATH + r + \"/\" + INFOS);\r\n                String adresse = contenu[0].split(\",\")[3];\r\n                List<String> categories = Arrays.asList(contenu[2].split(\",\"));\r\n\r\n                if (estRecherche) {\r\n                    if (r.contains(demandeUtilisateur))\r\n                        revendeurSelect.add(r);\r\n                } else {\r\n                    switch (choix) {\r\n                        case 1 -> {\r\n                            if (categories.contains(demandeUtilisateur))\r\n                                revendeurSelect.add(r);\r\n                        }\r\n                        case 2 -> {\r\n                            if (r.contains(demandeUtilisateur))\r\n                                revendeurSelect.add(r);\r\n                        }\r\n                        case 3 -> {\r\n                            if (adresse.contains(demandeUtilisateur))\r\n                                revendeurSelect.add(r);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (revendeurSelect.isEmpty()) {\r\n                System.out.println(\"\\nAucun résultat pour cette recherche. Veuillez réessayer.\");\r\n                continue;\r\n            }\r\n            revendeurSelect.add(\"Faire une nouvelle recherche\");\r\n            revendeurSelect.add(\"Retourner au menu acheteur\");\r\n            while (true) {\r\n                System.out.println(\"\\nChoisissez un revendeur: \");\r\n                choix = selectionChoix(revendeurSelect.toArray());\r\n                if (choix == revendeurSelect.size() - 1)\r\n                    break;\r\n                else if (choix == revendeurSelect.size())\r\n                    return;\r\n                Revendeur r = initialiserRevendeur(revendeurSelect.get(choix - 1));\r\n                System.out.println(r.afficherMetriques());\r\n                System.out.println(\"\\nQue voulez-vous faire ensuite?\");\r\n                choix = selectionChoix(new String[]{\"Liker le revendeur\", \"Retourner au résultat de la recherche\"});\r\n                if (choix == 1) {\r\n                    if (r.ajouterFollower(acheteur.getUsername()))\r\n                        System.out.println(\"\\nVous suivez maintenant le revendeur \" + r.getUsername() + \"!\");\r\n                    else\r\n                        System.out.println(\"\\nVous suivez déjà ce revendeur!\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    static void suivreAcheteur(String nom) {\r\n        switch (acheteur.suivre(nom)) {\r\n            case 0 -> {\r\n                System.out.println(\"\\nVous suivez maintenant l'acheteur \" + nom + \"!\");\r\n                Acheteur a = initialiserAcheteur(nom);\r\n                a.addNotifications(new Notification(0, acheteur.getUsername(), \"\", \"\",\r\n                        -1));\r\n                acheteur.ajouterPoints(5);\r\n                a.ajouterPoints(5);\r\n            }\r\n            case 1 -> System.out.println(\"\\nVous suivez déjà cet acheteur!\");\r\n            case 2 -> System.out.println(\"\\nVous ne pouvez pas vous suivre vous-même!\");\r\n        }\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/unishop/ControleurAcheteur.java b/src/main/java/unishop/ControleurAcheteur.java
--- a/src/main/java/unishop/ControleurAcheteur.java	(revision dd0d682b358ac9cef5f8dfb7fa480c7939791852)
+++ b/src/main/java/unishop/ControleurAcheteur.java	(date 1703627388708)
@@ -346,12 +346,13 @@
                     if (cmd.estEnProduction()) {
                         System.out.println("\nVoulez-vous vraiment annuler votre commande?");
                         if (choixOuiNon()) {
-                            effacerFichier(COMMANDES_PATH + cmd.getId() + CSV);
                             acheteur.annulerCommande(cmd);
                             for (String re : cmd.getRevendeurs()) {
                                 Revendeur r = initialiserRevendeur(re);
                                 r.annulerCommande(r.trouverCommande(cmd.getId()));
                             }
+                            acheteur.ajouterPoints(-cmd.getPointsTotal());
+                            effacerFichier(COMMANDES_PATH + cmd.getId() + CSV);
                             System.out.println("\nVous avez annulé votre commande #" + cmd.getId() + "!");
                             return;
                         }
Index: Database/Produits/Produit1.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Revendeur1,Produit1,Produit1,20.51,498,20,4.33\r\nImage1,Image2\r\nVid1,Vid2\r\n0,Produit1,Produit1,Roman,11111,12/26/2023,11111,1111\r\nAcheteur1\r\nAcheteur1,5,Good,false\r\nAcheteur1,3,Meh,false\r\nAcheteur1,5,Yay,false
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Database/Produits/Produit1.csv b/Database/Produits/Produit1.csv
--- a/Database/Produits/Produit1.csv	(revision dd0d682b358ac9cef5f8dfb7fa480c7939791852)
+++ b/Database/Produits/Produit1.csv	(date 1703626115419)
@@ -1,4 +1,4 @@
-Revendeur1,Produit1,Produit1,20.51,498,20,4.33
+Revendeur1,Produit1,Produit1,20.51,497,20,4.33
 Image1,Image2
 Vid1,Vid2
 0,Produit1,Produit1,Roman,11111,12/26/2023,11111,1111
Index: Database/Users/Revendeurs/Revendeur3/Infos.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>3,revendeur3@unishop.ca,3333333333,3 rue Revendeur3,0.0,0\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Database/Users/Revendeurs/Revendeur3/Infos.csv b/Database/Users/Revendeurs/Revendeur3/Infos.csv
--- a/Database/Users/Revendeurs/Revendeur3/Infos.csv	(revision dd0d682b358ac9cef5f8dfb7fa480c7939791852)
+++ b/Database/Users/Revendeurs/Revendeur3/Infos.csv	(date 1703626743229)
@@ -1,5 +1,5 @@
 3,revendeur3@unishop.ca,3333333333,3 rue Revendeur3,0.0,0
-
+charlotto_number1gf
 
 
 
Index: Database/Users/Acheteurs/Acheteur1/Infos.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>1,acheteur1@unishop.ca,1111111111,1 rue Acheteur1,Acheteur1,Acheteur1,60,0\r\nAcheteur10\r\n\r\n1\r\n2\r\n5,Acheteur1,Revendeur1,Produit1,0
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Database/Users/Acheteurs/Acheteur1/Infos.csv b/Database/Users/Acheteurs/Acheteur1/Infos.csv
--- a/Database/Users/Acheteurs/Acheteur1/Infos.csv	(revision dd0d682b358ac9cef5f8dfb7fa480c7939791852)
+++ b/Database/Users/Acheteurs/Acheteur1/Infos.csv	(date 1703628138296)
@@ -3,4 +3,3 @@
 
 1
 2
-5,Acheteur1,Revendeur1,Produit1,0
\ No newline at end of file
Index: Database/Users/Revendeurs/Revendeur1/Infos.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>1,,1111111111,1 rue Revendeur1,123.06,3\r\nAcheteur1\r\nLivres et manuels\r\n1\r\n2\r\n6,Acheteur1,Revendeur1,Produit1,1
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Database/Users/Revendeurs/Revendeur1/Infos.csv b/Database/Users/Revendeurs/Revendeur1/Infos.csv
--- a/Database/Users/Revendeurs/Revendeur1/Infos.csv	(revision dd0d682b358ac9cef5f8dfb7fa480c7939791852)
+++ b/Database/Users/Revendeurs/Revendeur1/Infos.csv	(date 1703626115437)
@@ -1,6 +1,7 @@
-1,,1111111111,1 rue Revendeur1,123.06,3
+1,,1111111111,1 rue Revendeur1,164.08,4
 Acheteur1
 Livres et manuels
-1
+1,2
 2
-6,Acheteur1,Revendeur1,Produit1,1
\ No newline at end of file
+6,Acheteur1,Revendeur1,Produit1,1
+6,charlotto_number1gf,Revendeur1,Produit1,2
\ No newline at end of file
Index: Database/Emails.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>acheteur1@unishop.ca,acheteur2@unishop.ca,acheteur3@unishop.ca,acheteur4@unishop.ca,acheteur5@unishop.ca,acheteur6@unishop.ca,acheteur7@unishop.ca,acheteur8@unishop.ca,acheteur9@unishop.ca,acheteur10@unishop.ca,revendeur1@unishop.ca,revendeur2@unishop.ca,revendeur3@unishop.ca,revendeur4@unishop.ca,revendeur5@unishop.ca
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Database/Emails.csv b/Database/Emails.csv
--- a/Database/Emails.csv	(revision dd0d682b358ac9cef5f8dfb7fa480c7939791852)
+++ b/Database/Emails.csv	(date 1703628436361)
@@ -1,1 +1,1 @@
-acheteur1@unishop.ca,acheteur2@unishop.ca,acheteur3@unishop.ca,acheteur4@unishop.ca,acheteur5@unishop.ca,acheteur6@unishop.ca,acheteur7@unishop.ca,acheteur8@unishop.ca,acheteur9@unishop.ca,acheteur10@unishop.ca,revendeur1@unishop.ca,revendeur2@unishop.ca,revendeur3@unishop.ca,revendeur4@unishop.ca,revendeur5@unishop.ca
\ No newline at end of file
+acheteur1@unishop.ca,acheteur2@unishop.ca,acheteur3@unishop.ca,acheteur4@unishop.ca,acheteur5@unishop.ca,acheteur6@unishop.ca,acheteur7@unishop.ca,acheteur8@unishop.ca,acheteur9@unishop.ca,acheteur10@unishop.ca,revendeur1@unishop.ca,revendeur2@unishop.ca,revendeur3@unishop.ca,revendeur4@unishop.ca,revendeur5@unishop.ca,charlotto@autoclan_paneton,c
\ No newline at end of file
Index: Database/IDs.csv
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>2,5
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Database/IDs.csv b/Database/IDs.csv
--- a/Database/IDs.csv	(revision dd0d682b358ac9cef5f8dfb7fa480c7939791852)
+++ b/Database/IDs.csv	(date 1703629531262)
@@ -1,1 +1,1 @@
-2,5
\ No newline at end of file
+4,7
\ No newline at end of file
